This tool splits a document into a set of words and those words into characters.  The definition of "words" and "characters" comes from the Unicode standard as implemented by IBM's ICU library.  All non-word characters, such as punctuation, are removed from the text.  The output is a kind of "ASCII-separated" text stream.  Documents are read one line at a time and output one line at a time.  Lines are delimited by the newline character (0x10), words are delimited by the record separator character (0x1E) and characters are delimited by the unit separator character (0x1F).

There is an alternative word splitting mode called "whitespace".  In this mode, words are broken up by the occurrence of any whitespace character (as defined by java.lang.Character.isWhitespace).  This mode is useful in cases where some "words" are combinations of punctuation marks and letters and numbers.  For example in twitter data it is common to find text like: "running is #fun".  If parsed with the Unicode parser, the "#" symbol would be treated as a word by itself.  With the whitespace parser "#fun" is treated a word.  In this mode, all punctuation, regardless of where it occurs, is output.

Unexpected results can occur if either of the control characters 0x1E or 0x1F occur in the source text.  Input documents should be screened for those such characters if they may occur.
